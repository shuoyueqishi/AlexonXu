server:
  port: 8392

spring:
  #定义数据源
  shardingsphere:
    props:
      sql:
        show: true
    datasource:
      names: ds_0,ds_1,ds_2
      ds_0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/order?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=GMT%2B8&useSSL=false
        username: root
        password: root
      ds_1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/order_1?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=GMT%2B8&useSSL=false
        username: root
        password: root
      ds_2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/order_2?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=GMT%2B8&useSSL=false
        username: root
        password: root
        ## 分库策略，以user_id为分片键，分片策略为user_id % 2 + 1，user_id为偶数操作db1数据源，否则操作db2。
    sharding:
      tables:
        order_t:
          actual-data-nodes: ds_$->{0..2}.order_t
          key-generator:
            column: order_id
            type: SNOWFLAKE
          database-strategy:
            inline:
              sharding-column: user_id
              algorithm-expression: ds_$->{user_id % 3}
      default-data-source-name: ds_0
  # redis
  redis: # redis配置
    host: 127.0.0.1
    port: 6379
    # password: xlt
    database: 0
    lettuce:
      pool:
        max-active: 8 # 连接池最大连接数 默认8 ，负数表示没有限制
        max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制） 默认-1
        max-idle: 8 # 连接池中的最大空闲连接 默认8
        min-idle: 0 # 连接池中的最小空闲连接 默认0
  # MQ配置
  rabbitmq:
    host: localhost
    port: 5672
    username: xlt
    password: xlt
    # 虚拟host 可以不设置,使用server默认host
    virtual-host: XltHost
    listener:
      simple:
        acknowledge-mode: manual #设置确认模式手工确认
        concurrency: 3 #消费者最小数量
        max-concurrency: 10 # 消费者最大数量
        retry:
          #开启消费者（程序出现异常的情况下会）进行重试
          enabled: true
          #最大重试次数
          max-attempts: 3
          #重试间隔次数
          initial-interval: 300
          #开启手动ack
          #acknowledge-mode: manual
