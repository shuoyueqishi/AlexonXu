<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.alexon.authorization.mapper.IRolePermissionMapper">
    <resultMap id="ResultMap" type="com.alexon.authorization.model.po.RolePermissionPo">
        <result column="role_id" jdbcType="BIGINT" property="roleId" />
        <result column="permission_id" jdbcType="BIGINT" property="permissionId" />
        <result column="create_by" jdbcType="VARCHAR" property="createBy" />
        <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
        <result column="last_update_by" jdbcType="VARCHAR" property="lastUpdateBy" />
        <result column="last_update_date" jdbcType="TIMESTAMP" property="lastUpdateDate" />
    </resultMap>

    <insert id="batchInsertPermissions">
        <if test="list!=null and list.size()>0">
            insert into role_permission_t (role_id,
                                      permission_id,
                                      create_by,
                                      creation_date,
                                      last_update_by,
                                      last_update_date) values
            <foreach collection="list" index="index" item="item" separator=",">
                (
                #{item.roleId},
                #{item.permissionId},
                #{item.createBy},
                #{item.creationDate},
                #{item.lastUpdateBy},
                #{item.lastUpdateDate}
                )
            </foreach>
            ON DUPLICATE KEY UPDATE
                last_update_by = VALUES(last_update_by),
                last_update_date = VALUES(last_update_date)
        </if>
    </insert>

    <delete id="removeRolePermission">
        delete from role_permission_t
        where  role_id = #{vo.roleId}
          and  permission_id in
        <foreach collection="vo.permissionList" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <select id="queryPermissionByRoleId" resultType="com.alexon.authorization.model.vo.PermissionVo">
        select  p.permission_id as permissionId,
                p.resource_name as resourceName,
                p.operate_code as operateCode,
                p.operate_desc as operateDesc,
                p.path as path,
                p.http_method as httpMethod,
                p.method_name as methodName,
                p.tenant as tenant,
                p.last_update_by as lastUpdateBy,
                p.last_update_date as lastUpdateDate,
                p.create_by as createBy,
                p.creation_date as creationDate
        from permission_t p
        left join role_permission_t r on r.permission_id=p.permission_id
        where 1=1
        <if test="roleId!=null">
            and r.role_id = #{roleId}
        </if>
    </select>

    <select id="queryRoleListByUserId" resultType="com.alexon.authorization.model.vo.UserRoleVo">
        select r.role_id as roleId,
               r.role_code as roleCode,
               r.role_name as roleName,
               r.role_desc as roleDesc,
               r.tenant as tenant,
               ur.start_time as startTime,
               ur.end_time as endTime,
               r.creation_date as creationDate,
               r.create_by as createBy,
               r.last_update_date as lastUpdateDate,
               r.last_update_by as lastUpdateBy
        from role_t r
        left join user_role_t ur on ur.role_id = r.role_id
        where ur.user_id=#{roleId}
    </select>


</mapper>
